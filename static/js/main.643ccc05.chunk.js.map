{"version":3,"sources":["util/states.js","components/RestaurantTable/RestaurantTable.tsx","components/Select/Select.tsx","util/filterUtilities.ts","components/Filter/Filter.tsx","icons/search.js","icons/close.js","components/TextSearch/TextSearch.tsx","icons/chevron-left.js","icons/chevron-right.js","components/Pagination/Pagination.tsx","icons/filter.js","components/Layout/Layout.tsx","api/api.tsx","App.tsx","index.tsx"],"names":["module","exports","AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","RestaurantTable","restaurants","id","map","restaurant","i","key","data-testid","name","city","state","telephone","genre","Select","props","label","clear","className","date-testid","onClick","options","option","value","type","checked","Array","isArray","selected","some","onChange","filterWithSingleValue","filter","RegExp","test","filterWithArrayOfValues","length","regexArray","v","regex","filterByTextSearch","textSearch","getGenreFromResaurants","genreObj","reduce","acc","toLowerCase","split","x","capitalize","convertFilterObjectToArray","getAttireFromResaurants","attireObj","attire","getStateFromResaurants","stateObj","stateCode","toUpperCase","stateName","STATES","str","slice","obj","Object","entries","entry","push","sort","a","b","Filter","filterKey","filterGroups","setFilter","clearFilter","e","event","multiple","newValue","clickedValue","target","currentValue","includes","updateFilter","version","xmlns","width","height","viewBox","fill","d","Search","useState","text","setText","setTextSearch","onKeyPress","placeholder","undefined","restaurantCount","pagination","offset","limit","pageNumber","Math","ceil","totalPages","setPagination","disabled","Layout","open","setOpen","noMatchesFound","loading","stopPropagation","getRestaurants","onSuccess","onError","axios","get","method","headers","Authorization","then","data","catch","_","DEFAULT_FILTER","DEFAULT_PAGINATION","App","setFilterGroups","setLoading","setRestaurants","filteredRestaurants","setFilteredRestaurants","setError","errorMessage","alert","useEffect","api","onGetRestaurantSuccess","filteredSortedRestaurants","keys","filterAndSortRestaurants","prepareFilterGroups","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGAEAA,EAAOC,QAAU,CACfC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,WACJC,GAAI,cACJC,GAAI,WACJC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,GAAI,QACJC,GAAI,WACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,WACJC,GAAI,YACJC,GAAI,QACJC,GAAI,WACJC,GAAI,gBACJC,GAAI,WACJC,GAAI,YACJC,GAAI,cACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,gBACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,OACJC,GAAI,WACJC,GAAI,SACJC,GAAI,eACJC,GAAI,eACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,YACJC,GAAI,QACJC,GAAI,OACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,gBACJC,GAAI,YACJC,GAAI,Y,6PCnBSC,G,MA7ByC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzD,OACE,yBAAKC,GAAG,iBACN,+BACE,+BACE,4BACE,oCACA,oCACA,qCACA,yCACA,uCAGJ,sCACGD,QADH,IACGA,OADH,EACGA,EAAaE,KAAI,SAACC,EAAYC,GAAb,OAChB,wBAAIC,IAAKD,EAAGE,cAAA,cACV,4BAAKH,EAAWI,MAChB,4BAAKJ,EAAWK,MAChB,4BAAKL,EAAWM,OAChB,4BAAKN,EAAWO,WAChB,4BAAKP,EAAWQ,gBCWfC,G,MA/BuB,SAACC,GACrC,OACE,qCACIA,EAAMC,OAASD,EAAME,QACrB,yBAAKC,UAAU,gBAAgBC,cAAY,iBACxCJ,EAAMC,OAAS,GAAI,IACnBD,EAAME,OAAS,4BAAQG,QAASL,EAAME,OAAvB,UAGpB,yBAAKC,UAAU,oBACZH,EAAMM,QAAQjB,KAAI,SAACkB,EAAQhB,GAAT,OACjB,2BAAOC,IAAKD,GACV,2BACEiB,MAAOD,EAAOnB,GACdK,cAAA,mBAAyBc,EAAOnB,IAChCqB,KAAK,WACLC,QACEC,MAAMC,QAAQZ,EAAMa,UAChBb,EAAMa,SAASC,MAAK,SAAC1B,GAAD,OAAQA,IAAOmB,EAAOnB,MAC1CY,EAAMa,WAAaN,EAAOnB,GAEhC2B,SAAUf,EAAMe,WAElB,6BAAMR,EAAOb,c,uCCGnBsB,EAAwB,SAC5B7B,EACAK,EACAgB,GAEA,OAAOrB,EAAY8B,QAAO,SAAC3B,GACzB,OAAO4B,OAAOV,EAAO,KAAKW,KAAK7B,EAAWE,QAIxC4B,EAA0B,SAC9BjC,EACAK,EACAgB,GAEA,GAAIA,EAAMa,OAAQ,CAChB,IAAMC,EAAad,EAAMnB,KAAI,SAACkC,GAAD,OAAO,IAAIL,OAAOK,EAAG,QAClD,OAAOpC,EAAY8B,QAAO,SAAC3B,GACzB,OAAOgC,EAAWR,MAAK,SAACU,GAAD,OAAWA,EAAML,KAAK7B,EAAWE,UAG5D,OAAOL,GAGHsC,EAAqB,SAACC,EAAoBvC,GAC9C,OAAOA,EAAY8B,QAAO,SAAC3B,GAEzB,IAAMkC,EAAQ,IAAIN,OAAOQ,EAAY,KACrC,OACEF,EAAML,KAAK7B,EAAWI,OACtB8B,EAAML,KAAK7B,EAAWK,OACtB6B,EAAML,KAAK7B,EAAWQ,WAWtB6B,EAAyB,SAACxC,GAC9B,IAAMyC,EAAWzC,EACd0C,QAAO,SAACC,EAAD,GAAqB,IAAbhC,EAAY,EAAZA,MACd,MAAM,GAAN,OAAUgC,EAAV,YAAiBhC,EAAMiC,iBACtB,IACFC,MAAM,KACNf,QAAO,SAACgB,GAAD,OAAOA,KACdJ,QAAO,SAACC,EAAKhC,GACZ,OAAO,eACFgC,EADL,eAEGhC,EAAQoC,EAAWpC,OAErB,IACL,OAAOqC,EAA2BP,IAG9BQ,EAA0B,SAACjD,GAC/B,IAAMkD,EAAYlD,EAAY0C,QAAO,SAACC,EAAKxC,GACzC,OAAO,eACFwC,EADL,eAEGxC,EAAWgD,OAAOP,cAAgBG,EAAW5C,EAAWgD,YAE1D,IACH,OAAOH,EAA2BE,IAG9BE,EAAyB,SAACpD,GAC9B,IAAMqD,EAAWrD,EAAY0C,QAAO,SAACC,EAAKxC,GACxC,IAAMmD,EAAYnD,EAAWM,MAAM8C,cAC7BC,EAAaC,IAEhBH,GACH,OAAO,eAAKX,EAAZ,eAAkBW,EAAYE,GAAaF,MAC1C,IACH,OAAON,EAA2BK,IA+C9BN,EAAa,SAACW,GAAD,gBAChBA,EAAIC,MAAM,EAAG,GAAGJ,eADA,OACgBG,EAAIC,MAAM,GAAGf,gBAE1CI,EAA6B,SAACY,GAClC,OAAOC,OAAOC,QAAQF,GACnBlB,QAAO,SAACC,EAAqCoB,GAAW,IAAD,cACnCA,EADmC,GAC/C9D,EAD+C,KAC3CM,EAD2C,KAGtD,OADAoC,EAAIqB,KAAK,CAAE/D,KAAIM,SACRoC,IACN,IACFsB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE3D,KAAO4D,EAAE5D,MAAQ,EAAI,MCnI7B6D,EA3BuB,SAACvD,GACrC,OACE,uCAEI,CAAC,QAAS,QAAS,UAA0BX,KAC7C,SAACmE,EAAsBjE,GACrB,IAAMe,EAAUN,EAAMyD,aAAaD,GAC3BvC,EAAsBjB,EAAtBiB,OAAQyC,EAAc1D,EAAd0D,UAEhB,OAAOpD,EAAQe,OACb,kBAAC,EAAD,CACE7B,IAAKD,EACLe,QAASA,EACTO,SAAUI,EAAOuC,GACjBvD,MAAK,aAAQuD,GACbtD,MAAO,kBDyFM,SACzBe,EACAyC,EACAlE,GAMAkE,EAJmB,eACdzC,EADc,eAEhBzB,EAAMmB,MAAMC,QAAQK,EAAOzB,IAAQ,GAAK,QChGlBmE,CAAY1C,EAAQyC,EAAWF,IAC5CzC,SAAU,SAAC6C,GAAD,ODoGI,SAC1BC,EACA5C,EACAyC,EACAlE,EACAsE,GAEA,IAGIC,EAHEC,EAAgBH,EAAMI,OAA4BzD,MAEpD0D,EAAejD,EAAOzB,GAItBsE,IAGAC,EADEG,EAAaC,SAASH,GACbE,EAAajD,QAAO,SAACT,GAAD,OAAWA,IAAUwD,KAE5C,sBAAOE,GAAP,CAAqBF,KAWjCN,EAAU,eAAKzC,EAAN,eAAezB,EAAMuE,KChIhBK,CAAaR,EAAG3C,EAAQyC,EAAWF,GAAW,MAGhD,UCvBC,G,MAAA,WACb,OACE,yBACEpE,GAAG,cACHiF,QAAQ,MACRC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,yCACA,0BACEC,KAAK,UACLC,EAAE,ibCbK,aACb,OACE,yBACEN,QAAQ,MACRC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,wCACA,0BACEC,KAAK,UACLC,EAAE,kKC+BKC,EAvC2B,SAAC5E,GAAW,IAAD,EAC3B6E,mBAAiB,IADU,mBAC5CC,EAD4C,KACtCC,EADsC,KAEnD,OACE,yBAAK3F,GAAG,cACN,2BACEqB,KAAK,OACLrB,GAAG,cACHoB,MAAOsE,EACP/D,SAAU,YAA4B,IAAfP,EAAc,EAAxByD,OAAUzD,MACrBuE,EAAQvE,GACHA,GAAOR,EAAMgF,cAAc,KAElCC,WAAY,kBACF,UADE,EAAGzF,IACKQ,EAAMgF,cAAcF,GAAQ,MAEhDI,YAAY,kCAEbJ,GAAQ9E,EAAM0B,aAAeoD,EAC5B,4BACErF,cAAY,sBACZY,QAAS,WACP0E,EAAQ,IACR/E,EAAMgF,cAAc,MAGtB,kBAAC,EAAD,OAGF,4BACEvF,cAAY,gBACZY,QAAS,kBAAML,EAAMgF,cAAcF,KAEnC,kBAAC,EAAD,SCpCK,G,MAAA,WACb,OACE,yBACET,QAAQ,MACRC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,+CACA,0BACEC,KAAK,UACLC,EAAE,mMCZK,aACb,OACE,yBACEN,QAAQ,MACRC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,gDACA,0BACEC,KAAK,UACLC,EAAE,iMC4BKC,EApC2B,SAAC5E,GACzC,QAA8BmF,IAA1BnF,EAAMoF,gBAA+B,OAAO,KADG,MAGzBpF,EAAMqF,WAAxBC,EAH2C,EAG3CA,OAAQC,EAHmC,EAGnCA,MACVC,EAAaC,KAAKC,KAAKJ,EAASC,GAAS,EACzCI,EAAaF,KAAKC,KAAK1F,EAAMoF,gBAAkBG,GAUrD,OACE,yBAAKnG,GAAG,cACN,4BACEiB,QAXoB,WACxBL,EAAM4F,cAAc,CAAEN,OAAQA,EAASC,EAAOA,WAW1CM,SAAyB,IAAfL,EACV/F,cAAY,mBAEZ,kBAAC,EAAD,OANJ,QAQQ+F,EARR,OAQwBG,EACtB,4BACEtF,QAfe,WACnBL,EAAM4F,cAAc,CAAEN,OAAQA,EAASC,EAAOA,WAe1CM,SAAUL,IAAeG,EACzBlG,cAAY,eAEZ,kBAAC,EAAD,SClCO,aACb,OACE,yBACE4E,QAAQ,MACRC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,yCACA,0BACEC,KAAK,UACLC,EAAE,slBCmDKmB,G,MAvDuB,SAAC9F,GAAW,IAAD,EACvB6E,oBAAkB,GADK,mBACxCkB,EADwC,KAClCC,EADkC,KAEzCC,GAAkBjG,EAAMkG,UAAYlG,EAAMb,YAAYkC,OAC5D,OAAIrB,EAAMkG,QAAgB,yBAAK9G,GAAG,WAEhC,yBACEA,GAAG,SACHiB,QAAS,WACP0F,GAAQC,GAAQ,KAGlB,yBACE5G,GAAG,aACHe,UAAS,UAAK4F,EAAO,OAAS,GAArB,WACT1F,QAAS,SAACuD,GAAD,OAAOA,EAAEuC,oBAElB,4BACE/G,GAAG,oBACHe,UAAS,UAAK4F,EAAO,OAAS,GAArB,WACT1F,QAAS,kBAAM2F,GAASD,KAEvBA,EAAO,kBAAC,EAAD,MAAgB,kBAAC,EAAD,OAE1B,kBAAC,EAAD,CACEtC,aAAczD,EAAMyD,aACpBxC,OAAQjB,EAAMiB,OACdyC,UAAW1D,EAAM0D,aAIrB,yBAAKtE,GAAG,eACN,kBAAC,EAAD,CACEsC,WAAY1B,EAAM0B,WAClBsD,cAAehF,EAAMgF,gBAEtBiB,EACC,yBAAK7G,GAAG,cAAR,oBAEA,oCACE,kBAAC,EAAD,CACE8G,QAASlG,EAAMkG,QACf/G,YAAaa,EAAMb,cAErB,kBAAC,EAAD,CACEkG,WAAYrF,EAAMqF,WAClBO,cAAe5F,EAAM4F,cACrBR,gBAAiBpF,EAAMoF,uB,yCC3CtB,GACbgB,eAZkB,uCAAG,WAAOC,EAAqBC,GAA5B,SAAAjD,EAAA,+EACrBkD,IACGC,IAAI,6DAA8D,CACjEC,OAAQ,MACRC,QAAS,CACPC,cAAe,0BAGlBC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcR,EAAUQ,MAC7BC,OAAM,SAACC,GAAD,OAAOT,EAAQ,0BATH,2CAAH,yDCOdU,EAAiB,CACrBpH,MAAO,GACPE,MAAO,GACPwC,OAAQ,IAGJ2E,EAAqB,CACzB3B,OAAQ,EACRC,MAAO,IA+DM2B,EA5DO,WAAO,IAAD,EACErC,mBAASmC,GADX,mBACnB/F,EADmB,KACXyC,EADW,OAEUmB,mBAASoC,GAFnB,mBAEnB5B,EAFmB,KAEPO,EAFO,OAGcf,mBAA+B,CACrEjF,MAAO,GACPE,MAAO,GACPwC,OAAQ,KANgB,mBAGnBmB,EAHmB,KAGL0D,EAHK,OAQItC,oBAAS,GARb,mBAQnBqB,EARmB,KAQVkB,EARU,OASUvC,mBAAS,IATnB,mBASnBnD,EATmB,KASPsD,EATO,OAUYH,mBAA8B,MAV1C,mBAUnB1F,EAVmB,KAUNkI,EAVM,OAW4BxC,mBACpD,IAZwB,mBAWnByC,EAXmB,KAWEC,EAXF,KAepBC,EAAW,SAACC,GAChBC,MAAMD,GACNL,GAAW,IAGbO,qBAAU,WACR,GAAoB,OAAhBxI,EACFyI,EAAIxB,eAAeyB,EAAwBL,OACtC,CACL,IAAMM,EXzC4B,SAAC7G,EAAqBS,EAAoBvC,GAIhF,IAHA,IAAImI,EAAsBnI,GAAe,GAGzC,MAFa6D,OAAO+E,KAAK9G,GAEzB,eAAwB,CAAnB,IAAMzB,EAAG,KACNgB,EAAQS,EAAOzB,GAEnB8H,EADE3G,MAAMC,QAAQJ,GACMY,EACpBkG,EACA9H,EACAgB,GAGoBQ,EACpBsG,EACA9H,EACAgB,GAQN,OAJIkB,IACF4F,EAAsB7F,EAAmBC,EAAY4F,IAErBA,EAAoBlE,MAAK,SAACC,EAAEC,GAAH,OAAQD,EAAE3D,KAAK4D,EAAE5D,MAAQ,EAAI,KWkBlDsI,CAChC/G,EACAS,EACAvC,GAEFoI,EAAuBO,GACvBlC,EAAcqB,MAEf,CAAChG,EAAQ9B,EAAauC,IAEzB,IAAMmG,EAAyB,SAAC1I,GAC9B,IAAMsE,EXWyB,SAACtE,GAAD,MAAgC,CACjEW,MAAO6B,EAAuBxC,GAC9BmD,OAAQF,EAAwBjD,GAChCS,MAAO2C,EAAuBpD,IWdP8I,CAAoB9I,GACzCgI,EAAgB1D,GAChB4D,EAAelI,GACfiI,GAAW,IAGb,OACE,kBAAC,EAAD,CACEjI,YAAamI,EAAoBxE,MAC/BuC,EAAWC,OACXD,EAAWC,OAASD,EAAWE,OAEjCtE,OAAQA,EACRyC,UAAWA,EACXD,aAAcA,EACd/B,WAAYA,EACZsD,cAAeA,EACfK,WAAYA,EACZO,cAAeA,EACfR,gBAAe,OAAEkC,QAAF,IAAEA,OAAF,EAAEA,EAAqBjG,OACtC6E,QAASA,KCtEfgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.643ccc05.chunk.js","sourcesContent":["// list\n// entry count: 38\nmodule.exports = {\n  AL: \"Alabama\",\n  AK: \"Alaska\",\n  AZ: \"Arizona\",\n  AR: \"Arkansas\",\n  CA: \"California\",\n  CO: \"Colorado\",\n  CT: \"Connecticut\",\n  DE: \"Delaware\",\n  FL: \"Florida\",\n  GA: \"Georgia\",\n  HI: \"Hawaii\",\n  ID: \"Idaho\",\n  IL: \"Illinois\",\n  IN: \"Indiana\",\n  IA: \"Iowa\",\n  KS: \"Kansas\",\n  KY: \"Kentucky\",\n  LA: \"Louisiana\",\n  ME: \"Maine\",\n  MD: \"Maryland\",\n  MA: \"Massachusetts\",\n  MI: \"Michigan\",\n  MN: \"Minnesota\",\n  MS: \"Mississippi\",\n  MO: \"Missouri\",\n  MT: \"Montana\",\n  NE: \"Nebraska\",\n  NV: \"Nevada\",\n  NH: \"New Hampshire\",\n  NJ: \"New Jersey\",\n  NM: \"New Mexico\",\n  NY: \"New York\",\n  NC: \"North Carolina\",\n  ND: \"North Dakota\",\n  OH: \"Ohio\",\n  OK: \"Oklahoma\",\n  OR: \"Oregon\",\n  PA: \"Pennsylvania\",\n  RI: \"Rhode Island\",\n  SC: \"South Carolina\",\n  SD: \"South Dakota\",\n  TN: \"Tennessee\",\n  TX: \"Texas\",\n  UT: \"Utah\",\n  VT: \"Vermont\",\n  VA: \"Virginia\",\n  WA: \"Washington\",\n  WV: \"West Virginia\",\n  WI: \"Wisconsin\",\n  WY: \"Wyoming\",\n};\n","import React from \"react\";\nimport \"./RestaurantTable.css\";\nimport { RestaurantTableProps } from \"../../types\";\n\nconst RestaurantTable: React.FC<RestaurantTableProps> = ({ restaurants }) => {\n  return (\n    <div id=\"table-wrapper\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Telephone</th>\n            <th>Genre</th>\n          </tr>\n        </thead>\n        <tbody>\n          {restaurants?.map((restaurant, i) => (\n            <tr key={i} data-testid={`restaurant`}>\n              <td>{restaurant.name}</td>\n              <td>{restaurant.city}</td>\n              <td>{restaurant.state}</td>\n              <td>{restaurant.telephone}</td>\n              <td>{restaurant.genre}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RestaurantTable;\n","import React from \"react\";\nimport \"./Select.css\";\nimport { SelectProps } from \"../../types\";\n\nconst Select: React.FC<SelectProps> = (props) => {\n  return (\n    <>\n      {(props.label || props.clear) && (\n        <div className=\"select-header\" date-testid=\"select-header\">\n          {props.label || \"\"}{\" \"}\n          {props.clear && <button onClick={props.clear}>clear</button>}\n        </div>\n      )}\n      <div className=\"select-container\">\n        {props.options.map((option, i) => (\n          <label key={i}>\n            <input\n              value={option.id}\n              data-testid={`checkbox-${option.id}`}\n              type=\"checkbox\"\n              checked={\n                Array.isArray(props.selected)\n                  ? props.selected.some((id) => id === option.id)\n                  : props.selected === option.id\n              }\n              onChange={props.onChange}\n            />\n            <div>{option.name}</div>\n          </label>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Select;\n","import { Restaurant, FilterKey, FilterState } from '../types';\nimport STATES from \"./states\";\n\nexport const filterAndSortRestaurants = (filter: FilterState, textSearch: string, restaurants: Restaurant[]) => {\n  let filteredRestaurants = restaurants || [];\n  const keys = Object.keys(filter) as FilterKey[];\n\n  for (const key of keys) {\n    const value = filter[key as FilterKey];\n    if (Array.isArray(value)) {\n      filteredRestaurants = filterWithArrayOfValues(\n        filteredRestaurants,\n        key,\n        value\n      );\n    } else\n      filteredRestaurants = filterWithSingleValue(\n        filteredRestaurants,\n        key,\n        value\n      );\n  }\n\n  if (textSearch)\n    filteredRestaurants = filterByTextSearch(textSearch, filteredRestaurants);\n\n  const filteredSortedRestaurants = filteredRestaurants.sort((a,b)=> a.name<b.name ? -1 : 0)\n  return filteredSortedRestaurants;\n};\n\nconst filterWithSingleValue = (\n  restaurants: Restaurant[],\n  key: FilterKey,\n  value: string\n) => {\n  return restaurants.filter((restaurant) => {\n    return RegExp(value, \"i\").test(restaurant[key]);\n  });\n};\n\nconst filterWithArrayOfValues = (\n  restaurants: Restaurant[],\n  key: FilterKey,\n  value: string[]\n) => {\n  if (value.length) {\n    const regexArray = value.map((v) => new RegExp(v, \"i\"));\n    return restaurants.filter((restaurant) => {\n      return regexArray.some((regex) => regex.test(restaurant[key]));\n    });\n  }\n  return restaurants;\n};\n\nconst filterByTextSearch = (textSearch: string, restaurants: Restaurant[]) => {\n  return restaurants.filter((restaurant) => {\n    //create a case insensitive regex to seach the text\n    const regex = new RegExp(textSearch, \"i\");\n    return (\n      regex.test(restaurant.name) ||\n      regex.test(restaurant.city) ||\n      regex.test(restaurant.genre)\n    );\n  });\n};\n\nexport const prepareFilterGroups = (restaurants: Restaurant[]) => ({\n  genre: getGenreFromResaurants(restaurants),\n  attire: getAttireFromResaurants(restaurants),\n  state: getStateFromResaurants(restaurants),\n});\n\nconst getGenreFromResaurants = (restaurants: Restaurant[]) => {\n  const genreObj = restaurants\n    .reduce((acc, { genre }) => {\n      return `${acc},${genre.toLowerCase()}`;\n    }, \"\")\n    .split(\",\")\n    .filter((x) => x) // remove emptry string\n    .reduce((acc, genre) => {\n      return {\n        ...acc,\n        [genre]: capitalize(genre),\n      };\n    }, {});\n  return convertFilterObjectToArray(genreObj);\n};\n\nconst getAttireFromResaurants = (restaurants: Restaurant[]) => {\n  const attireObj = restaurants.reduce((acc, restaurant) => {\n    return {\n      ...acc,\n      [restaurant.attire.toLowerCase()]: capitalize(restaurant.attire),\n    };\n  }, {});\n  return convertFilterObjectToArray(attireObj);\n};\n\nconst getStateFromResaurants = (restaurants: Restaurant[]) => {\n  const stateObj = restaurants.reduce((acc, restaurant) => {\n    const stateCode = restaurant.state.toUpperCase();\n    const stateName = (STATES as {\n      [key: string]: string;\n    })[stateCode];\n    return { ...acc, [stateCode]: stateName || stateCode };\n  }, {});\n  return convertFilterObjectToArray(stateObj);\n};\n\nexport const clearFilter = (\n  filter: FilterState,\n  setFilter: Function,\n  key: FilterKey\n) => {\n  const updatedFilter = {\n    ...filter,\n    [key]: Array.isArray(filter[key]) ? [] : null,\n  };\n  setFilter(updatedFilter);\n};\n\nexport const updateFilter = (\n  event: React.ChangeEvent,\n  filter: FilterState,\n  setFilter: Function,\n  key: FilterKey,\n  multiple: boolean\n) => {\n  const clickedValue = (event.target as HTMLInputElement).value;\n\n  let currentValue = filter[key];\n  let newValue;\n\n  // multiple indicated filter group can select mulitle options (value and new value are arrays)\n  if (multiple) {\n    // if clicked value is already select then filter it out of\n    if (currentValue.includes(clickedValue)) {\n      newValue = currentValue.filter((value) => value !== clickedValue);\n    } else {\n      newValue = [...currentValue, clickedValue];\n    }\n  }\n  // The following code enables filtering for filter groups where only\n  // one value can be selected at a time. Since no such group is used\n  // currently typechecks prevent its usage.\n  // else {\n  //   if (value === clickedValue) newValue = \"\";\n  //   else newValue = clickedValue;\n  // }\n\n  setFilter({ ...filter, [key]: newValue });\n};\n\nconst capitalize = (str: string) =>\n`${str.slice(0, 1).toUpperCase()}${str.slice(1).toLowerCase()}`;\n\nconst convertFilterObjectToArray = (obj: Object) => {\n  return Object.entries(obj)\n    .reduce((acc: { id: string, name: string }[], entry) => {\n      const [id, name] = entry;\n      acc.push({ id, name });\n      return acc;\n    }, [])\n    .sort((a, b) => (a.name < b.name ? -1 : 0));\n};","import React from \"react\";\nimport Select from \"../Select/Select\";\nimport { FilterProps, FilterKey } from \"../../types\";\nimport { clearFilter, updateFilter } from \"../../util/filterUtilities\";\n\nconst Filter: React.FC<FilterProps> = (props) => {\n  return (\n    <div>\n      Filter:\n      {([\"state\", \"genre\", \"attire\"] as FilterKey[]).map(\n        (filterKey: FilterKey, i) => {\n          const options = props.filterGroups[filterKey];\n          const { filter, setFilter } = props;\n          // check to make sure Select options array isnt empty\n          return options.length ? (\n            <Select\n              key={i}\n              options={options}\n              selected={filter[filterKey]}\n              label={`By ${filterKey}`}\n              clear={() => clearFilter(filter, setFilter, filterKey)}\n              onChange={(e) =>\n                updateFilter(e, filter, setFilter, filterKey, true)\n              }\n            />\n          ) : null;\n        }\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      id=\"search-icon\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 25 25\"\n    >\n      <title>search</title>\n      <path\n        fill=\"#3675ff\"\n        d=\"M24.225 21.274l-5.922-5.036c-0.612-0.551-1.267-0.804-1.796-0.779 1.398-1.637 2.242-3.762 2.242-6.083 0-5.178-4.197-9.375-9.375-9.375s-9.375 4.197-9.375 9.375 4.197 9.375 9.375 9.375c2.322 0 4.446-0.844 6.083-2.242-0.024 0.529 0.229 1.184 0.779 1.796l5.036 5.922c0.862 0.958 2.271 1.039 3.13 0.18s0.779-2.268-0.18-3.13zM9.375 15.625c-3.452 0-6.25-2.798-6.25-6.25s2.798-6.25 6.25-6.25 6.25 2.798 6.25 6.25-2.798 6.25-6.25 6.25z\"\n      ></path>\n    </svg>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 20 20\"\n    >\n      <title>close</title>\n      <path\n        fill=\"#3675ff\"\n        d=\"M10 8.586l-7.071-7.071-1.414 1.414 7.071 7.071-7.071 7.071 1.414 1.414 7.071-7.071 7.071 7.071 1.414-1.414-7.071-7.071 7.071-7.071-1.414-1.414-7.071 7.071z\"\n      ></path>\n    </svg>\n    // <svg\n    //   version=\"1.1\"\n    //   xmlns=\"http://www.w3.org/2000/svg\"\n    //   width=\"25\"\n    //   height=\"25\"\n    //   viewBox=\"0 0 25 25\"\n    // >\n    //   <title>cross</title>\n    //   <path\n    //     fill=\"#3675ff\"\n    //     d=\"M24.772 20.084c-0-0-0-0-0-0l-7.584-7.584 7.584-7.584c0-0 0-0 0-0 0.082-0.082 0.141-0.177 0.179-0.279 0.104-0.278 0.045-0.603-0.179-0.826l-3.583-3.583c-0.223-0.223-0.548-0.282-0.826-0.179-0.102 0.038-0.197 0.097-0.279 0.178 0 0-0 0-0 0l-7.584 7.584-7.584-7.584c-0-0-0-0-0-0-0.082-0.082-0.177-0.141-0.279-0.178-0.278-0.104-0.603-0.045-0.826 0.179l-3.583 3.583c-0.223 0.223-0.282 0.548-0.179 0.826 0.038 0.102 0.097 0.197 0.179 0.279 0 0 0 0 0 0l7.584 7.584-7.584 7.584c-0 0-0 0-0 0-0.082 0.082-0.141 0.177-0.179 0.279-0.104 0.278-0.045 0.603 0.179 0.826l3.583 3.583c0.223 0.223 0.548 0.282 0.826 0.179 0.102-0.038 0.197-0.097 0.279-0.179 0-0 0-0 0-0l7.584-7.584 7.584 7.584c0 0 0 0 0 0 0.082 0.082 0.177 0.141 0.279 0.179 0.278 0.104 0.603 0.045 0.826-0.179l3.583-3.583c0.223-0.223 0.282-0.548 0.179-0.826-0.038-0.102-0.097-0.197-0.179-0.279z\"\n    //   ></path>\n    // </svg>\n  );\n};\n","import React, { useState } from \"react\";\nimport { TextSearchProps } from \"../../types\";\nimport \"./TextSearch.css\";\nimport SearchIcon from \"../../icons/search\";\nimport CloseIcon from \"../../icons/close\";\n\nconst Search: React.FC<TextSearchProps> = (props) => {\n  const [text, setText] = useState<string>(\"\");\n  return (\n    <div id=\"search-box\">\n      <input\n        type=\"text\"\n        id=\"text-search\"\n        value={text}\n        onChange={({ target: { value } }) => {\n          setText(value);\n          if (!value) props.setTextSearch(\"\");\n        }}\n        onKeyPress={({ key }) =>\n          key === \"Enter\" ? props.setTextSearch(text) : null\n        }\n        placeholder=\"search by name, city or genre\"\n      />\n      {text && props.textSearch === text ? (\n        <button\n          data-testid=\"clear-search-button\"\n          onClick={() => {\n            setText(\"\");\n            props.setTextSearch(\"\");\n          }}\n        >\n          <CloseIcon />\n        </button>\n      ) : (\n        <button\n          data-testid=\"search-button\"\n          onClick={() => props.setTextSearch(text)}\n        >\n          <SearchIcon />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <title>chevron-left</title>\n      <path\n        fill=\"#3675ff\"\n        d=\"M15.707 17.293l-5.293-5.293 5.293-5.293c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0l-6 6c-0.391 0.391-0.391 1.024 0 1.414l6 6c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414z\"\n      ></path>\n    </svg>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n    >\n      <title>chevron-right</title>\n      <path\n        fill=\"#3675ff\"\n        d=\"M9.707 18.707l6-6c0.391-0.391 0.391-1.024 0-1.414l-6-6c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5.293 5.293-5.293 5.293c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0z\"\n      ></path>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { PaginationProps } from \"../../types\";\nimport \"./Pagination.css\";\nimport PreviousIcon from \"../../icons/chevron-left\";\nimport NextIcon from \"../../icons/chevron-right\";\n\nconst Search: React.FC<PaginationProps> = (props) => {\n  if (props.restaurantCount === undefined) return null;\n\n  const { offset, limit } = props.pagination;\n  const pageNumber = Math.ceil(offset / limit) + 1;\n  const totalPages = Math.ceil(props.restaurantCount / limit);\n\n  const goToPreviousePage = () => {\n    props.setPagination({ offset: offset - limit, limit });\n  };\n\n  const goToNextPage = () => {\n    props.setPagination({ offset: offset + limit, limit });\n  };\n\n  return (\n    <div id=\"pagination\">\n      <button\n        onClick={goToPreviousePage}\n        disabled={pageNumber === 1}\n        data-testid=\"previous-button\"\n      >\n        <PreviousIcon />\n      </button>\n      Page {pageNumber} of {totalPages}\n      <button\n        onClick={goToNextPage}\n        disabled={pageNumber === totalPages}\n        data-testid=\"next-button\"\n      >\n        <NextIcon />\n      </button>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 25 25\"\n    >\n      <title>filter</title>\n      <path\n        fill=\"#3675ff\"\n        d=\"M12.5 0c-6.904 0-12.5 1.749-12.5 3.906v2.344l9.375 9.375v7.813c0 0.863 1.399 1.563 3.125 1.563s3.125-0.7 3.125-1.563v-7.813l9.375-9.375v-2.344c0-2.157-5.596-3.906-12.5-3.906zM2.304 3.389c0.585-0.333 1.406-0.65 2.375-0.915 2.147-0.588 4.925-0.912 7.821-0.912s5.674 0.324 7.821 0.912c0.969 0.265 1.79 0.582 2.375 0.915 0.386 0.22 0.594 0.406 0.691 0.517-0.097 0.111-0.305 0.297-0.691 0.517-0.585 0.333-1.406 0.65-2.375 0.915-2.147 0.588-4.925 0.912-7.821 0.912s-5.674-0.324-7.821-0.912c-0.969-0.265-1.79-0.582-2.375-0.915-0.386-0.22-0.594-0.406-0.691-0.517 0.097-0.111 0.305-0.297 0.691-0.517z\"\n      ></path>\n    </svg>\n  );\n};\n","import React, { useState } from \"react\";\nimport RestaurantTable from \"../RestaurantTable/RestaurantTable\";\nimport Filter from \"../Filter/Filter\";\nimport TextSearch from \"../TextSearch/TextSearch\";\nimport Pagination from \"../Pagination/Pagination\";\nimport FilterIcon from \"../../icons/filter\";\nimport CloseIcon from \"../../icons/close\";\nimport { LayoutProps } from \"../../types\";\nimport \"./Layout.css\";\n\nconst Layout: React.FC<LayoutProps> = (props) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const noMatchesFound = !props.loading && !props.restaurants.length;\n  if (props.loading) return <div id=\"loader\" />;\n  return (\n    <div\n      id=\"layout\"\n      onClick={() => {\n        open && setOpen(false);\n      }}\n    >\n      <div\n        id=\"left-panel\"\n        className={`${open ? \"open\" : \"\"}-filter`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <button\n          id=\"open-close-filter\"\n          className={`${open ? \"open\" : \"\"}-filter`}\n          onClick={() => setOpen(!open)}\n        >\n          {open ? <CloseIcon /> : <FilterIcon />}\n        </button>\n        <Filter\n          filterGroups={props.filterGroups}\n          filter={props.filter}\n          setFilter={props.setFilter}\n        />\n      </div>\n\n      <div id=\"main-screen\">\n        <TextSearch\n          textSearch={props.textSearch}\n          setTextSearch={props.setTextSearch}\n        />\n        {noMatchesFound ? (\n          <div id=\"no-matches\">No matches found</div>\n        ) : (\n          <>\n            <RestaurantTable\n              loading={props.loading}\n              restaurants={props.restaurants}\n            />\n            <Pagination\n              pagination={props.pagination}\n              setPagination={props.setPagination}\n              restaurantCount={props.restaurantCount}\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import axios from \"axios\";\n\nconst getRestaurants = async (onSuccess: Function, onError: Function) =>\n  axios\n    .get(\"https://code-challenge.spectrumtoolbox.com/api/restaurants\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Api-Key q3MNxtfep8Gt\",\n      },\n    })\n    .then(({ data }) => onSuccess(data))\n    .catch((_) => onError(\"Error loading data\"));\n\nexport default {\n  getRestaurants,\n};\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"./components/Layout/Layout\";\nimport api from \"./api/api\";\nimport {\n  filterAndSortRestaurants,\n  prepareFilterGroups,\n} from \"./util/filterUtilities\";\nimport { Restaurant, FilterGroupStructure } from \"./types\";\n\nconst DEFAULT_FILTER = {\n  state: [] as string[],\n  genre: [] as string[],\n  attire: [] as string[],\n};\n\nconst DEFAULT_PAGINATION = {\n  offset: 0,\n  limit: 10,\n};\n\nconst App: React.FC = () => {\n  const [filter, setFilter] = useState(DEFAULT_FILTER);\n  const [pagination, setPagination] = useState(DEFAULT_PAGINATION);\n  const [filterGroups, setFilterGroups] = useState<FilterGroupStructure>({\n    state: [],\n    genre: [],\n    attire: [],\n  });\n  const [loading, setLoading] = useState(true);\n  const [textSearch, setTextSearch] = useState(\"\");\n  const [restaurants, setRestaurants] = useState<Restaurant[] | null>(null);\n  const [filteredRestaurants, setFilteredRestaurants] = useState<Restaurant[]>(\n    []\n  );\n\n  const setError = (errorMessage: string) => {\n    alert(errorMessage);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (restaurants === null) {\n      api.getRestaurants(onGetRestaurantSuccess, setError);\n    } else {\n      const filteredSortedRestaurants = filterAndSortRestaurants(\n        filter,\n        textSearch,\n        restaurants\n      );\n      setFilteredRestaurants(filteredSortedRestaurants);\n      setPagination(DEFAULT_PAGINATION);\n    }\n  }, [filter, restaurants, textSearch]);\n\n  const onGetRestaurantSuccess = (restaurants: Restaurant[]) => {\n    const filterGroups = prepareFilterGroups(restaurants);\n    setFilterGroups(filterGroups);\n    setRestaurants(restaurants);\n    setLoading(false);\n  };\n\n  return (\n    <Layout\n      restaurants={filteredRestaurants.slice(\n        pagination.offset,\n        pagination.offset + pagination.limit\n      )}\n      filter={filter}\n      setFilter={setFilter}\n      filterGroups={filterGroups}\n      textSearch={textSearch}\n      setTextSearch={setTextSearch}\n      pagination={pagination}\n      setPagination={setPagination}\n      restaurantCount={filteredRestaurants?.length}\n      loading={loading}\n    />\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}